loki:
  schemaConfig:
    configs:
      - from: "2024-01-11"
        index:
          period: 24h
          prefix: loki_index_
        object_store: s3
        schema: v13
        store: tsdb
#        store: boltdb-shipper  
  #useTestSchema: true
  limits_config: 
    retention_period: 2160h
  auth_enabled: true
  table_manager:
    retention_deletes_enabled: true
    retention_period: 168h
  storage:
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin
    type: s3
    s3:
      endpoint: minio-loki-api.observe.olsdemo.com
      region: ols-observe-loki
      bucketnames: loki
      secretAccessKey: xxxxx
      accessKeyId: xxxxxx
      s3ForcePathStyle: true
      insecure: false
      
      #global:
      #dnsService: "coredns" #kube-dns,coredns
  
  #config:
  #  limits_config:
  #    volume_enabled: true
#    ingestion_rate_mb: 10
#    ingestion_burst_size_mb: 20
#  config:
#    schemaConfig:
#      configs:
#        - from: "2024-11-11"                 # วันที่เริ่มใช้ schema นี้
#          store: boltdb-shipper               # กำหนดประเภท store เช่น `boltdb-shipper` หรือ `bigtable` ฯลฯ
#          object_store: s3                    # กำหนดประเภทของ object store ที่ใช้ เช่น `filesystem`, `s3`, `gcs`, `azure`, `swift`, ฯลฯ
#          schema: v11                         # ระบุ schema เวอร์ชันที่ต้องการ เช่น `v11` เป็นเวอร์ชันล่าสุดที่นิยม
#          index:
#            prefix: loki_index_               # ชื่อ prefix สำหรับดัชนี
#            period: 24h                       # ระยะเวลาในการสร้างดัชนีใหม่

      




limits_config:
  ingestion_rate_strategy: global
  ingestion_rate_mb: 300000000
  ingestion_burst_size_mb: 300000000        
  volume_enabled: true
  
query_range:
  split_queries_by_interval: 24h

frontend:
  max_outstanding_per_tenant: 1024        

#minio:
 #enabled: true
  #buckets:
  #- name: chunks
  #  policy: none
  #  purge: false
  #- name: ruler
  #  policy: none
  #  purge: false
  #- name: admin
  #  policy: none
  #  purge: false
  #drivesPerNode: 2
  #enabled: false
  #persistence:
  #  size: 1000Gi
  #replicas: 2
  #resources:
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi
  #rootPassword: minio-password-here
  #rootUser: minio-user-here

# ===============================
# Backend (index-gateway, compactor, etc.)
# ===============================
backend:
  replicas: 3
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi  
#  autoscaling:
#    enabled: true    
#    maxReplicas: 2
#    minReplicas: 2  
  persistence:
    storageClass: nfs-storageclass
    size: 50Gi

# ===============================
# Write (distributor + ingester)
# ===============================
write:
  replicas: 3
  resources:
    requests:
      cpu: 300m
      memory: 512Mi
    limits:
      cpu: 800m
      memory: 1Gi  
  persistence:
    storageClass: nfs-storageclass
    size: 50Gi     

# ===============================
# Read (querier + query-frontend)
# ===============================    
read:
  replicas: 3
  resources:
    requests:
      cpu: 300m
      memory: 512Mi
    limits:
      cpu: 800m
      memory: 1Gi  
  persistence:
    storageClass: nfs-storageclass
    size: 50Gi
    
# ===============================
# Canary (for testing log pipeline)
# ===============================
canary:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

# ===============================
# Results cache (Memcached)
# ===============================
resultsCache:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 256Mi

# ===============================
# Chunks cache (Memcached)
# ===============================
chunksCache:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 256Mi

# =====================
# Gateway ( Nginx Pod )
# =====================
gateway:
    replicas: 1
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 300m
        memory: 256Mi

#gateway:
#  ingress:
#    enabled: true 
#    ingressClassName: nginx
#    hosts:
#      - host: loki-gateway.milkyk8slab.dedyn.io
#        paths:
#        # New data structure introduced
#          - path: /
#        # Newly added optional property
#            pathType: Prefix
