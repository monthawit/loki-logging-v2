---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-loki-pvc
  namespace: loki-stack
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: rook-cephfs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-grafana-rook-ceph
  namespace: rook-ceph
  labels:
    app: grafana-rook-ceph
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-rook-ceph
  template:
    metadata:
      labels:
        app: grafana-rook-ceph
    spec:
      containers:
      - image: grafana/grafana
        name: web-httpd
        ports:
        - containerPort: 3000
          name: web-port
          protocol: TCP
#        resources:
#          requests:
#            memory: "32Mi"
#            cpu: "200m"
#          limits:
#            memory: "64Mi"
#            cpu: "250m"
#        volumeMounts:
#        - mountPath: "/var/lib/grafana"
#          name: pvc-vol-01
        volumeMounts:
        - name: host-path
          mountPath: /var/lib/grafana
#      imagePullSecrets:
#      - name: pull-secret-name
#      volumes:
#      - name: pvc-vol-01
#        persistentVolumeClaim:
#          claimName: grafana-rbd-pvc
      volumes:
      - name: host-path
        hostPath:
          path: /data/grafana-ceph
#      nodeSelector:
#        kubernetes.io/hostname: ols-milky-k8slab-worker-01
      nodeSelector:
        grafana: worker-01
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-rook-ceph
  namespace: rook-ceph
spec:
  type: ClusterIP
  ports:
  - port: 3000
  selector:
    app: grafana-rook-ceph
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-rook-ceph
  namespace: rook-ceph
  annotations:
    #kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: certmanager-01
    #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    #nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # type of authentication
    #nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    #nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # message to display with an appropriate context why the authentication is required
    #nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - foo'
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - grafana-ceph.milkyk8slab.dedyn.io
# if you use certmanager do not remove #
    secretName: grafana-ceph
  rules:
  - host: grafana-ceph.milkyk8slab.dedyn.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-rook-ceph
            port:
              number: 3000
